%{
#include "hpp.hpp"
string LexString;
%}
%x lexstring
%option noyywrap yylineno
S [\+\-]?
N [0-9]+
%%
#[^\n]*			{}					/* comment			*/

'				{BEGIN(lexstring); LexString="";}
<lexstring>'	{BEGIN(INITIAL); yylval.o = new Str(LexString); return STR; }
<lexstring>.	{LexString+=yytext[0];}

{N}[eE]{S}{N}	TOC(Num,NUM)
{N}\.{N}		TOC(Num,NUM)
{N}				TOC(Int,NUM)		/* number			*/

\=				TOC(Op,EQ)			/* operator			*/
\+				TOC(Op,ADD)
\-				TOC(Op,SUB)
\*				TOC(Op,MUL)
\/				TOC(Op,DIV)
\^				TOC(Op,POW)

[a-zA-Z0-9_]+	TOC(Sym,SYM)		/* symbol			*/
[ \t\r\n]+		{}					/* drop spaces		*/
.				{yyerror(yytext);}	/* undetected char	*/
%%
